<% drone_type = ENV.fetch('DRONE_TYPE', 'quad') %>
<% autopilot = ENV.fetch('AUTOPILOT', 'px4') %>
<% drone_id = ENV.fetch('DRONE_ID', 1).to_i %>
<% headless = ENV.fetch('HEADLESS', 'true') %>
<% camera = ENV.fetch('CAMERA', 'true') %>
<% lidar = ENV.fetch('LIDAR', 'true') %>
<% simulated_time = ENV.fetch('SIMULATED_TIME', 'false') %>
<% record_rosbag = ENV.fetch('RECORD_ROSBAG', 'false') %>
<% subnet_prefix = ENV.fetch('SUBNET_PREFIX', '42.42') %>
<% hitl = ENV.fetch('HITL', 'false') %>

name: drone

windows:

  - debug_aircraft_<%= drone_id %>:
      layout: even-horizontal
      panes:
        - clear && echo "So nice to have you with us, this is the aircraft <%= drone_id %> container."
        <% if autopilot == 'px4' %>
        - ros2 run autopilot_interface px4_interface --ros-args -r __ns:=/Drone<%= drone_id %> <% if simulated_time == 'true' %> -p use_sim_time:=true<% end %>
        <% elsif autopilot == 'ardupilot' %>
        - ros2 run autopilot_interface ardupilot_interface --ros-args -r __ns:=/Drone<%= drone_id %> <% if simulated_time == 'true' %> --ros-args -p use_sim_time:=true<% end %>
        <% end %>

  - offboard_control:
      layout: even-horizontal
      panes:
        <% if autopilot == 'px4' %>
        - ros2 run offboard_control px4_offboard --ros-args -r __ns:=/Drone<%= drone_id %> <% if simulated_time == 'true' %> -p use_sim_time:=true<% end %>
        <% elsif autopilot == 'ardupilot' %>
        - ros2 run offboard_control ardupilot_guided --ros-args -r __ns:=/Drone<%= drone_id %> <% if simulated_time == 'true' %> --ros-args -p use_sim_time:=true<% end %>
        <% end %>

  <% if autopilot == 'px4' %>
  - uxrce_dds:
      layout: even-horizontal
      panes:
        - MicroXRCEAgent udp4 -p 8888
  <% elsif autopilot == 'ardupilot' %>
  - mavros:
      layout: even-horizontal
      panes:
        - >
          <% if simulated_time == 'true' %>
          sudo sed -i '0,/ros__parameters:/s/ros__parameters:/ros__parameters:\n    use_sim_time: true/' /opt/ros/humble/share/mavros/launch/apm_config.yaml && 
          <% end %>
          ros2 launch mavros apm.launch fcu_url:=udp://0.0.0.0:<%= 22530 + drone_id - 1 %>@<%= 22530 + drone_id - 1 %> tgt_system:=<%= drone_id %>
  <% end %>

  <% if camera == 'true' %>
  - yolo:
      layout: even-horizontal
      panes:
        - ros2 run yolo_inference yolo_inference <% if headless == 'true' %> --headless<% end %> <% if simulated_time == 'true' %> <% if hitl == 'true' %> --hitl<% end %> --ros-args -p use_sim_time:=True<% end %>
  <% end %>

  <% if lidar == 'true' %>
  - kiss-icp:
      layout: even-horizontal
      panes:
        - ros2 launch kiss_icp odometry.launch.py topic:=/lidar_points <% if headless == 'true' %> visualize:=false<% end %>
  <% end %>

  - state_sharing_over_zenoh:
      layout: even-vertical
      panes:
        - ros2 run state_sharing state_sharing_node --ros-args -p autopilot:=<%= autopilot %> -p drone_id:=<%= drone_id %> <% if simulated_time == 'true' %> -p use_sim_time:=true<% end %>
        - >
          erb /aas/aircraft_resources/comms/zenoh_config_air.json5.erb > /aas/aircraft_resources/comms/zenoh_config_air.json5 &&
          zenoh-bridge-ros2dds -e tcp/<%= subnet_prefix %>.1.99:7447 -c /aas/aircraft_resources/comms/zenoh_config_air.json5

  <% if record_rosbag == 'true' %>
  - logging:
      layout: tiled
      panes:
        - mkdir -p /aas/rosbags && cd /aas/rosbags && ros2 bag record -a
  <% end %>